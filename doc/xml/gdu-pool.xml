<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
<!ENTITY version SYSTEM "version.xml">
]>
<refentry id="GduPool">
<refmeta>
<refentrytitle role="top_of_page" id="GduPool.top_of_page">GduPool</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GNOME-DISK-UTILITY Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GduPool</refname>
<refpurpose>Enumerate and monitor storage devices</refpurpose>
</refnamediv>

<refsynopsisdiv id="GduPool.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
                    <link linkend="GduPoolPrivate">GduPoolPrivate</link>;
                    <link linkend="GduPool-struct">GduPool</link>;
<link linkend="GduPool">GduPool</link> *           <link linkend="gdu-pool-new">gdu_pool_new</link>                        (void);
<link linkend="GduPool">GduPool</link> *           <link linkend="gdu-pool-new-for-address">gdu_pool_new_for_address</link>            (const <link linkend="gchar">gchar</link> *ssh_user_name,
                                                         const <link linkend="gchar">gchar</link> *ssh_address,
                                                         <link linkend="GError">GError</link> **error);
const <link linkend="gchar">gchar</link> *       <link linkend="gdu-pool-get-ssh-user-name">gdu_pool_get_ssh_user_name</link>          (<link linkend="GduPool">GduPool</link> *pool);
const <link linkend="gchar">gchar</link> *       <link linkend="gdu-pool-get-ssh-address">gdu_pool_get_ssh_address</link>            (<link linkend="GduPool">GduPool</link> *pool);
<link linkend="char">char</link> *              <link linkend="gdu-pool-get-daemon-version">gdu_pool_get_daemon_version</link>         (<link linkend="GduPool">GduPool</link> *pool);
<link linkend="gboolean">gboolean</link>            <link linkend="gdu-pool-is-daemon-inhibited">gdu_pool_is_daemon_inhibited</link>        (<link linkend="GduPool">GduPool</link> *pool);
<link linkend="gboolean">gboolean</link>            <link linkend="gdu-pool-supports-luks-devices">gdu_pool_supports_luks_devices</link>      (<link linkend="GduPool">GduPool</link> *pool);
<link linkend="GList">GList</link> *             <link linkend="gdu-pool-get-known-filesystems">gdu_pool_get_known_filesystems</link>      (<link linkend="GduPool">GduPool</link> *pool);
<link linkend="GduKnownFilesystem">GduKnownFilesystem</link> * <link linkend="gdu-pool-get-known-filesystem-by-id">gdu_pool_get_known_filesystem_by_id</link>
                                                        (<link linkend="GduPool">GduPool</link> *pool,
                                                         const <link linkend="char">char</link> *id);
<link linkend="GduDevice">GduDevice</link> *         <link linkend="gdu-pool-get-by-object-path">gdu_pool_get_by_object_path</link>         (<link linkend="GduPool">GduPool</link> *pool,
                                                         const <link linkend="char">char</link> *object_path);
<link linkend="GduDevice">GduDevice</link> *         <link linkend="gdu-pool-get-by-device-file">gdu_pool_get_by_device_file</link>         (<link linkend="GduPool">GduPool</link> *pool,
                                                         const <link linkend="char">char</link> *device_file);
<link linkend="GduPresentable">GduPresentable</link> *    <link linkend="gdu-pool-get-volume-by-device">gdu_pool_get_volume_by_device</link>       (<link linkend="GduPool">GduPool</link> *pool,
                                                         <link linkend="GduDevice">GduDevice</link> *device);
<link linkend="GduPresentable">GduPresentable</link> *    <link linkend="gdu-pool-get-drive-by-device">gdu_pool_get_drive_by_device</link>        (<link linkend="GduPool">GduPool</link> *pool,
                                                         <link linkend="GduDevice">GduDevice</link> *device);
<link linkend="GduLinuxMdDrive">GduLinuxMdDrive</link> *   <link linkend="gdu-pool-get-linux-md-drive-by-uuid">gdu_pool_get_linux_md_drive_by_uuid</link> (<link linkend="GduPool">GduPool</link> *pool,
                                                         const <link linkend="gchar">gchar</link> *uuid);
<link linkend="GduPresentable">GduPresentable</link> *    <link linkend="gdu-pool-get-presentable-by-id">gdu_pool_get_presentable_by_id</link>      (<link linkend="GduPool">GduPool</link> *pool,
                                                         const <link linkend="gchar">gchar</link> *id);
<link linkend="gboolean">gboolean</link>            <link linkend="gdu-pool-has-presentable">gdu_pool_has_presentable</link>            (<link linkend="GduPool">GduPool</link> *pool,
                                                         <link linkend="GduPresentable">GduPresentable</link> *presentable);
<link linkend="GList">GList</link> *             <link linkend="gdu-pool-get-devices">gdu_pool_get_devices</link>                (<link linkend="GduPool">GduPool</link> *pool);
<link linkend="GList">GList</link> *             <link linkend="gdu-pool-get-presentables">gdu_pool_get_presentables</link>           (<link linkend="GduPool">GduPool</link> *pool);
<link linkend="GList">GList</link> *             <link linkend="gdu-pool-get-enclosed-presentables">gdu_pool_get_enclosed_presentables</link>  (<link linkend="GduPool">GduPool</link> *pool,
                                                         <link linkend="GduPresentable">GduPresentable</link> *presentable);
<link linkend="GduAdapter">GduAdapter</link> *        <link linkend="gdu-pool-get-adapter-by-object-path">gdu_pool_get_adapter_by_object_path</link> (<link linkend="GduPool">GduPool</link> *pool,
                                                         const <link linkend="char">char</link> *object_path);
<link linkend="GList">GList</link> *             <link linkend="gdu-pool-get-adapters">gdu_pool_get_adapters</link>               (<link linkend="GduPool">GduPool</link> *pool);
<link linkend="GduExpander">GduExpander</link> *       <link linkend="gdu-pool-get-expander-by-object-path">gdu_pool_get_expander_by_object_path</link>
                                                        (<link linkend="GduPool">GduPool</link> *pool,
                                                         const <link linkend="char">char</link> *object_path);
<link linkend="GList">GList</link> *             <link linkend="gdu-pool-get-expanders">gdu_pool_get_expanders</link>              (<link linkend="GduPool">GduPool</link> *pool);
<link linkend="GduPort">GduPort</link> *           <link linkend="gdu-pool-get-port-by-object-path">gdu_pool_get_port_by_object_path</link>    (<link linkend="GduPool">GduPool</link> *pool,
                                                         const <link linkend="char">char</link> *object_path);
<link linkend="GList">GList</link> *             <link linkend="gdu-pool-get-ports">gdu_pool_get_ports</link>                  (<link linkend="GduPool">GduPool</link> *pool);
<link linkend="GduPresentable">GduPresentable</link> *    <link linkend="gdu-pool-get-hub-by-object-path">gdu_pool_get_hub_by_object_path</link>     (<link linkend="GduPool">GduPool</link> *pool,
                                                         const <link linkend="gchar">gchar</link> *object_path);
<link linkend="void">void</link>                <link linkend="gdu-pool-op-linux-md-start">gdu_pool_op_linux_md_start</link>          (<link linkend="GduPool">GduPool</link> *pool,
                                                         <link linkend="GPtrArray">GPtrArray</link> *component_objpaths,
                                                         <link linkend="GduPoolLinuxMdStartCompletedFunc">GduPoolLinuxMdStartCompletedFunc</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);
<link linkend="void">void</link>                <link linkend="gdu-pool-op-linux-md-create">gdu_pool_op_linux_md_create</link>         (<link linkend="GduPool">GduPool</link> *pool,
                                                         <link linkend="GPtrArray">GPtrArray</link> *component_objpaths,
                                                         const <link linkend="gchar">gchar</link> *level,
                                                         <link linkend="guint64">guint64</link> stripe_size,
                                                         const <link linkend="gchar">gchar</link> *name,
                                                         <link linkend="GduPoolLinuxMdCreateCompletedFunc">GduPoolLinuxMdCreateCompletedFunc</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);
<link linkend="void">void</link>                <link linkend="gdu-pool-op-linux-lvm2-vg-start">gdu_pool_op_linux_lvm2_vg_start</link>     (<link linkend="GduPool">GduPool</link> *pool,
                                                         const <link linkend="gchar">gchar</link> *uuid,
                                                         <link linkend="GduPoolLinuxLvm2VGStartCompletedFunc">GduPoolLinuxLvm2VGStartCompletedFunc</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);
<link linkend="void">void</link>                <link linkend="gdu-pool-op-linux-lvm2-vg-stop">gdu_pool_op_linux_lvm2_vg_stop</link>      (<link linkend="GduPool">GduPool</link> *pool,
                                                         const <link linkend="gchar">gchar</link> *uuid,
                                                         <link linkend="GduPoolLinuxLvm2VGStopCompletedFunc">GduPoolLinuxLvm2VGStopCompletedFunc</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);
<link linkend="void">void</link>                <link linkend="gdu-pool-op-linux-lvm2-lv-start">gdu_pool_op_linux_lvm2_lv_start</link>     (<link linkend="GduPool">GduPool</link> *pool,
                                                         const <link linkend="gchar">gchar</link> *group_uuid,
                                                         const <link linkend="gchar">gchar</link> *uuid,
                                                         <link linkend="GduPoolLinuxLvm2VGStartCompletedFunc">GduPoolLinuxLvm2VGStartCompletedFunc</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);
<link linkend="void">void</link>                <link linkend="gdu-pool-op-linux-lvm2-vg-set-name">gdu_pool_op_linux_lvm2_vg_set_name</link>  (<link linkend="GduPool">GduPool</link> *pool,
                                                         const <link linkend="gchar">gchar</link> *uuid,
                                                         const <link linkend="gchar">gchar</link> *new_name,
                                                         <link linkend="GduPoolLinuxLvm2VGSetNameCompletedFunc">GduPoolLinuxLvm2VGSetNameCompletedFunc</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);
<link linkend="void">void</link>                <link linkend="gdu-pool-op-linux-lvm2-lv-set-name">gdu_pool_op_linux_lvm2_lv_set_name</link>  (<link linkend="GduPool">GduPool</link> *pool,
                                                         const <link linkend="gchar">gchar</link> *group_uuid,
                                                         const <link linkend="gchar">gchar</link> *uuid,
                                                         const <link linkend="gchar">gchar</link> *new_name,
                                                         <link linkend="GduPoolLinuxLvm2LVSetNameCompletedFunc">GduPoolLinuxLvm2LVSetNameCompletedFunc</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);
<link linkend="void">void</link>                <link linkend="gdu-pool-op-linux-lvm2-lv-remove">gdu_pool_op_linux_lvm2_lv_remove</link>    (<link linkend="GduPool">GduPool</link> *pool,
                                                         const <link linkend="gchar">gchar</link> *group_uuid,
                                                         const <link linkend="gchar">gchar</link> *uuid,
                                                         <link linkend="GduPoolLinuxLvm2LVRemoveCompletedFunc">GduPoolLinuxLvm2LVRemoveCompletedFunc</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);
<link linkend="void">void</link>                <link linkend="gdu-pool-op-linux-lvm2-lv-create">gdu_pool_op_linux_lvm2_lv_create</link>    (<link linkend="GduPool">GduPool</link> *pool,
                                                         const <link linkend="gchar">gchar</link> *group_uuid,
                                                         const <link linkend="gchar">gchar</link> *name,
                                                         <link linkend="guint64">guint64</link> size,
                                                         <link linkend="guint">guint</link> num_stripes,
                                                         <link linkend="guint64">guint64</link> stripe_size,
                                                         <link linkend="guint">guint</link> num_mirrors,
                                                         const <link linkend="char">char</link> *fstype,
                                                         const <link linkend="char">char</link> *fslabel,
                                                         const <link linkend="char">char</link> *encrypt_passphrase,
                                                         <link linkend="gboolean">gboolean</link> fs_take_ownership,
                                                         <link linkend="GduPoolLinuxLvm2LVCreateCompletedFunc">GduPoolLinuxLvm2LVCreateCompletedFunc</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);
<link linkend="void">void</link>                <link linkend="gdu-pool-op-linux-lvm2-vg-add-pv">gdu_pool_op_linux_lvm2_vg_add_pv</link>    (<link linkend="GduPool">GduPool</link> *pool,
                                                         const <link linkend="gchar">gchar</link> *uuid,
                                                         const <link linkend="gchar">gchar</link> *physical_volume_object_path,
                                                         <link linkend="GduPoolLinuxLvm2VGAddPVCompletedFunc">GduPoolLinuxLvm2VGAddPVCompletedFunc</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);
<link linkend="void">void</link>                <link linkend="gdu-pool-op-linux-lvm2-vg-remove-pv">gdu_pool_op_linux_lvm2_vg_remove_pv</link> (<link linkend="GduPool">GduPool</link> *pool,
                                                         const <link linkend="gchar">gchar</link> *vg_uuid,
                                                         const <link linkend="gchar">gchar</link> *pv_uuid,
                                                         <link linkend="GduPoolLinuxLvm2VGRemovePVCompletedFunc">GduPoolLinuxLvm2VGRemovePVCompletedFunc</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);
</synopsis>
</refsynopsisdiv>

<refsect1 id="GduPool.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GObject">GObject</link>
   +----GduPool
</synopsis>
</refsect1>






<refsect1 id="GduPool.signals" role="signal_proto">
<title role="signal_proto.title">Signals</title>
<synopsis>
  &quot;<link linkend="GduPool-adapter-added">adapter-added</link>&quot;                                  : Run Last
  &quot;<link linkend="GduPool-adapter-changed">adapter-changed</link>&quot;                                : Run Last
  &quot;<link linkend="GduPool-adapter-removed">adapter-removed</link>&quot;                                : Run Last
  &quot;<link linkend="GduPool-device-added">device-added</link>&quot;                                   : Run Last
  &quot;<link linkend="GduPool-device-changed">device-changed</link>&quot;                                 : Run Last
  &quot;<link linkend="GduPool-device-job-changed">device-job-changed</link>&quot;                             : Run Last
  &quot;<link linkend="GduPool-device-removed">device-removed</link>&quot;                                 : Run Last
  &quot;<link linkend="GduPool-disconnected">disconnected</link>&quot;                                   : Run Last
  &quot;<link linkend="GduPool-expander-added">expander-added</link>&quot;                                 : Run Last
  &quot;<link linkend="GduPool-expander-changed">expander-changed</link>&quot;                               : Run Last
  &quot;<link linkend="GduPool-expander-removed">expander-removed</link>&quot;                               : Run Last
  &quot;<link linkend="GduPool-port-added">port-added</link>&quot;                                     : Run Last
  &quot;<link linkend="GduPool-port-changed">port-changed</link>&quot;                                   : Run Last
  &quot;<link linkend="GduPool-port-removed">port-removed</link>&quot;                                   : Run Last
  &quot;<link linkend="GduPool-presentable-added">presentable-added</link>&quot;                              : Run Last
  &quot;<link linkend="GduPool-presentable-changed">presentable-changed</link>&quot;                            : Run Last
  &quot;<link linkend="GduPool-presentable-job-changed">presentable-job-changed</link>&quot;                        : Run Last
  &quot;<link linkend="GduPool-presentable-removed">presentable-removed</link>&quot;                            : Run Last
</synopsis>
</refsect1>


<refsect1 id="GduPool.description" role="desc">
<title role="desc.title">Description</title>
<para>
The <link linkend="GduPool"><type>GduPool</type></link> object represents a connection to the udisks daemon.</para>
<para>
</para>
</refsect1>

<refsect1 id="GduPool.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="GduPoolPrivate" role="struct">
<title>GduPoolPrivate</title>
<indexterm zone="GduPoolPrivate"><primary sortas="GduPoolPrivate">GduPoolPrivate</primary></indexterm><programlisting>typedef struct _GduPoolPrivate GduPoolPrivate;</programlisting>
<para>
</para></refsect2>
<refsect2 id="GduPool-struct" role="struct">
<title>GduPool</title>
<indexterm zone="GduPool-struct"><primary sortas="GduPool">GduPool</primary></indexterm><programlisting>typedef struct _GduPool GduPool;</programlisting>
<para>
</para></refsect2>
<refsect2 id="gdu-pool-new" role="function">
<title>gdu_pool_new ()</title>
<indexterm zone="gdu-pool-new"><primary sortas="gdu_pool_new">gdu_pool_new</primary></indexterm><programlisting><link linkend="GduPool">GduPool</link> *           gdu_pool_new                        (void);</programlisting>
<para>
Create a new <link linkend="GduPool"><type>GduPool</type></link> object.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A <link linkend="GduPool"><type>GduPool</type></link> object. Caller must free this object using <link linkend="g-object-unref"><function>g_object_unref()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gdu-pool-new-for-address" role="function">
<title>gdu_pool_new_for_address ()</title>
<indexterm zone="gdu-pool-new-for-address"><primary sortas="gdu_pool_new_for_address">gdu_pool_new_for_address</primary></indexterm><programlisting><link linkend="GduPool">GduPool</link> *           gdu_pool_new_for_address            (const <link linkend="gchar">gchar</link> *ssh_user_name,
                                                         const <link linkend="gchar">gchar</link> *ssh_address,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>ssh_user_name</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ssh_address</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gdu-pool-get-ssh-user-name" role="function">
<title>gdu_pool_get_ssh_user_name ()</title>
<indexterm zone="gdu-pool-get-ssh-user-name"><primary sortas="gdu_pool_get_ssh_user_name">gdu_pool_get_ssh_user_name</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link> *       gdu_pool_get_ssh_user_name          (<link linkend="GduPool">GduPool</link> *pool);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gdu-pool-get-ssh-address" role="function">
<title>gdu_pool_get_ssh_address ()</title>
<indexterm zone="gdu-pool-get-ssh-address"><primary sortas="gdu_pool_get_ssh_address">gdu_pool_get_ssh_address</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link> *       gdu_pool_get_ssh_address            (<link linkend="GduPool">GduPool</link> *pool);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gdu-pool-get-daemon-version" role="function">
<title>gdu_pool_get_daemon_version ()</title>
<indexterm zone="gdu-pool-get-daemon-version"><primary sortas="gdu_pool_get_daemon_version">gdu_pool_get_daemon_version</primary></indexterm><programlisting><link linkend="char">char</link> *              gdu_pool_get_daemon_version         (<link linkend="GduPool">GduPool</link> *pool);</programlisting>
<para>
Get the version of the udisks on the system.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GduPool"><type>GduPool</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The version of udisks daemon. Caller must free
this string using <link linkend="g-free"><function>g_free()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gdu-pool-is-daemon-inhibited" role="function">
<title>gdu_pool_is_daemon_inhibited ()</title>
<indexterm zone="gdu-pool-is-daemon-inhibited"><primary sortas="gdu_pool_is_daemon_inhibited">gdu_pool_is_daemon_inhibited</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gdu_pool_is_daemon_inhibited        (<link linkend="GduPool">GduPool</link> *pool);</programlisting>
<para>
Checks if the daemon is currently inhibited.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GduPool"><type>GduPool</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="TRUE--CAPS"><literal>TRUE</literal></link> if the daemon is inhibited.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gdu-pool-supports-luks-devices" role="function">
<title>gdu_pool_supports_luks_devices ()</title>
<indexterm zone="gdu-pool-supports-luks-devices"><primary sortas="gdu_pool_supports_luks_devices">gdu_pool_supports_luks_devices</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gdu_pool_supports_luks_devices      (<link linkend="GduPool">GduPool</link> *pool);</programlisting>
<para>
Determine if the udisks daemon supports LUKS encrypted
devices.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GduPool"><type>GduPool</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="TRUE--CAPS"><type>TRUE</type></link> only if the daemon supports LUKS encrypted devices.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gdu-pool-get-known-filesystems" role="function">
<title>gdu_pool_get_known_filesystems ()</title>
<indexterm zone="gdu-pool-get-known-filesystems"><primary sortas="gdu_pool_get_known_filesystems">gdu_pool_get_known_filesystems</primary></indexterm><programlisting><link linkend="GList">GList</link> *             gdu_pool_get_known_filesystems      (<link linkend="GduPool">GduPool</link> *pool);</programlisting>
<para>
Get a list of file systems known to the udisks daemon.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GduPool"><type>GduPool</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A <link linkend="GList"><type>GList</type></link> of <link linkend="GduKnownFilesystem"><type>GduKnownFilesystem</type></link> objects. Caller must free
this (unref all objects, then use <link linkend="g-list-free"><function>g_list_free()</function></link>).
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gdu-pool-get-known-filesystem-by-id" role="function">
<title>gdu_pool_get_known_filesystem_by_id ()</title>
<indexterm zone="gdu-pool-get-known-filesystem-by-id"><primary sortas="gdu_pool_get_known_filesystem_by_id">gdu_pool_get_known_filesystem_by_id</primary></indexterm><programlisting><link linkend="GduKnownFilesystem">GduKnownFilesystem</link> * gdu_pool_get_known_filesystem_by_id
                                                        (<link linkend="GduPool">GduPool</link> *pool,
                                                         const <link linkend="char">char</link> *id);</programlisting>
<para>
Looks up a known file system by id.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GduPool"><type>GduPool</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>id</parameter>&#160;:</term>
<listitem><simpara> Identifier for the file system, e.g. <literal>ext3</literal> or <literal>vfat</literal>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A <link linkend="GduKnownFilesystem"><type>GduKnownFilesystem</type></link> object or <link linkend="NULL--CAPS"><type>NULL</type></link> if file system
corresponding to <parameter>id</parameter> exists. Caller must free this object using
<link linkend="g-object-unref"><function>g_object_unref()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gdu-pool-get-by-object-path" role="function">
<title>gdu_pool_get_by_object_path ()</title>
<indexterm zone="gdu-pool-get-by-object-path"><primary sortas="gdu_pool_get_by_object_path">gdu_pool_get_by_object_path</primary></indexterm><programlisting><link linkend="GduDevice">GduDevice</link> *         gdu_pool_get_by_object_path         (<link linkend="GduPool">GduPool</link> *pool,
                                                         const <link linkend="char">char</link> *object_path);</programlisting>
<para>
Looks up <link linkend="GduPort"><type>GduPort</type></link> object for <parameter>object_path</parameter>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara> the pool
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>object_path</parameter>&#160;:</term>
<listitem><simpara> the D-Bus object path
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A <link linkend="GduPort"><type>GduPort</type></link> object for <parameter>object_path</parameter>, otherwise
<link linkend="NULL--CAPS"><type>NULL</type></link>. Caller must unref this object using <link linkend="g-object-unref"><function>g_object_unref()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gdu-pool-get-by-device-file" role="function">
<title>gdu_pool_get_by_device_file ()</title>
<indexterm zone="gdu-pool-get-by-device-file"><primary sortas="gdu_pool_get_by_device_file">gdu_pool_get_by_device_file</primary></indexterm><programlisting><link linkend="GduDevice">GduDevice</link> *         gdu_pool_get_by_device_file         (<link linkend="GduPool">GduPool</link> *pool,
                                                         const <link linkend="char">char</link> *device_file);</programlisting>
<para>
Looks up <link linkend="GduDevice"><type>GduDevice</type></link> object for <parameter>device_file</parameter>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara> the device pool
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>device_file</parameter>&#160;:</term>
<listitem><simpara> the UNIX block special device file, e.g. /dev/sda1.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A <link linkend="GduDevice"><type>GduDevice</type></link> object for <parameter>object_path</parameter>, otherwise
<link linkend="NULL--CAPS"><type>NULL</type></link>. Caller must unref this object using <link linkend="g-object-unref"><function>g_object_unref()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gdu-pool-get-volume-by-device" role="function">
<title>gdu_pool_get_volume_by_device ()</title>
<indexterm zone="gdu-pool-get-volume-by-device"><primary sortas="gdu_pool_get_volume_by_device">gdu_pool_get_volume_by_device</primary></indexterm><programlisting><link linkend="GduPresentable">GduPresentable</link> *    gdu_pool_get_volume_by_device       (<link linkend="GduPool">GduPool</link> *pool,
                                                         <link linkend="GduDevice">GduDevice</link> *device);</programlisting>
<para>
Given <parameter>device</parameter>, find the <link linkend="GduVolume"><type>GduVolume</type></link> object for it.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GduPool"><type>GduPool</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>device</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GduDevice"><type>GduDevice</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A <link linkend="GduVolume"><type>GduVolume</type></link> object or <link linkend="NULL--CAPS"><type>NULL</type></link> if no <parameter>device</parameter> isn't a
volume. Caller must free this object with <link linkend="g-object-unref"><function>g_object_unref()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gdu-pool-get-drive-by-device" role="function">
<title>gdu_pool_get_drive_by_device ()</title>
<indexterm zone="gdu-pool-get-drive-by-device"><primary sortas="gdu_pool_get_drive_by_device">gdu_pool_get_drive_by_device</primary></indexterm><programlisting><link linkend="GduPresentable">GduPresentable</link> *    gdu_pool_get_drive_by_device        (<link linkend="GduPool">GduPool</link> *pool,
                                                         <link linkend="GduDevice">GduDevice</link> *device);</programlisting>
<para>
Given <parameter>device</parameter>, find the <link linkend="GduDrive"><type>GduDrive</type></link> object for it.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GduPool"><type>GduPool</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>device</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GduDevice"><type>GduDevice</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A <link linkend="GduDrive"><type>GduDrive</type></link> object or <link linkend="NULL--CAPS"><type>NULL</type></link> if no <parameter>device</parameter> isn't a
drive. Caller must free this object with <link linkend="g-object-unref"><function>g_object_unref()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gdu-pool-get-linux-md-drive-by-uuid" role="function">
<title>gdu_pool_get_linux_md_drive_by_uuid ()</title>
<indexterm zone="gdu-pool-get-linux-md-drive-by-uuid"><primary sortas="gdu_pool_get_linux_md_drive_by_uuid">gdu_pool_get_linux_md_drive_by_uuid</primary></indexterm><programlisting><link linkend="GduLinuxMdDrive">GduLinuxMdDrive</link> *   gdu_pool_get_linux_md_drive_by_uuid (<link linkend="GduPool">GduPool</link> *pool,
                                                         const <link linkend="gchar">gchar</link> *uuid);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uuid</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gdu-pool-get-presentable-by-id" role="function">
<title>gdu_pool_get_presentable_by_id ()</title>
<indexterm zone="gdu-pool-get-presentable-by-id"><primary sortas="gdu_pool_get_presentable_by_id">gdu_pool_get_presentable_by_id</primary></indexterm><programlisting><link linkend="GduPresentable">GduPresentable</link> *    gdu_pool_get_presentable_by_id      (<link linkend="GduPool">GduPool</link> *pool,
                                                         const <link linkend="gchar">gchar</link> *id);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>id</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gdu-pool-has-presentable" role="function">
<title>gdu_pool_has_presentable ()</title>
<indexterm zone="gdu-pool-has-presentable"><primary sortas="gdu_pool_has_presentable">gdu_pool_has_presentable</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gdu_pool_has_presentable            (<link linkend="GduPool">GduPool</link> *pool,
                                                         <link linkend="GduPresentable">GduPresentable</link> *presentable);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>presentable</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gdu-pool-get-devices" role="function">
<title>gdu_pool_get_devices ()</title>
<indexterm zone="gdu-pool-get-devices"><primary sortas="gdu_pool_get_devices">gdu_pool_get_devices</primary></indexterm><programlisting><link linkend="GList">GList</link> *             gdu_pool_get_devices                (<link linkend="GduPool">GduPool</link> *pool);</programlisting>
<para>
Get a list of all devices. The returned list is topologically sorted, e.g.
for any device A with a dependency on a device B, A is guaranteed to appear
after B.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GduPool"><type>GduPool</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A <link linkend="GList"><type>GList</type></link> of <link linkend="GduDevice"><type>GduDevice</type></link> objects. Caller must free this
(unref all objects, then use <link linkend="g-list-free"><function>g_list_free()</function></link>).
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gdu-pool-get-presentables" role="function">
<title>gdu_pool_get_presentables ()</title>
<indexterm zone="gdu-pool-get-presentables"><primary sortas="gdu_pool_get_presentables">gdu_pool_get_presentables</primary></indexterm><programlisting><link linkend="GList">GList</link> *             gdu_pool_get_presentables           (<link linkend="GduPool">GduPool</link> *pool);</programlisting>
<para>
Get a list of all presentables.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GduPool"><type>GduPool</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A <link linkend="GList"><type>GList</type></link> of objects implementing the <link linkend="GduPresentable"><type>GduPresentable</type></link>
interface. Caller must free this (unref all objects, then use
<link linkend="g-list-free"><function>g_list_free()</function></link>).
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gdu-pool-get-enclosed-presentables" role="function">
<title>gdu_pool_get_enclosed_presentables ()</title>
<indexterm zone="gdu-pool-get-enclosed-presentables"><primary sortas="gdu_pool_get_enclosed_presentables">gdu_pool_get_enclosed_presentables</primary></indexterm><programlisting><link linkend="GList">GList</link> *             gdu_pool_get_enclosed_presentables  (<link linkend="GduPool">GduPool</link> *pool,
                                                         <link linkend="GduPresentable">GduPresentable</link> *presentable);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>presentable</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gdu-pool-get-adapter-by-object-path" role="function">
<title>gdu_pool_get_adapter_by_object_path ()</title>
<indexterm zone="gdu-pool-get-adapter-by-object-path"><primary sortas="gdu_pool_get_adapter_by_object_path">gdu_pool_get_adapter_by_object_path</primary></indexterm><programlisting><link linkend="GduAdapter">GduAdapter</link> *        gdu_pool_get_adapter_by_object_path (<link linkend="GduPool">GduPool</link> *pool,
                                                         const <link linkend="char">char</link> *object_path);</programlisting>
<para>
Looks up <link linkend="GduAdapter"><type>GduAdapter</type></link> object for <parameter>object_path</parameter>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara> the pool
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>object_path</parameter>&#160;:</term>
<listitem><simpara> the D-Bus object path
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A <link linkend="GduAdapter"><type>GduAdapter</type></link> object for <parameter>object_path</parameter>, otherwise
<link linkend="NULL--CAPS"><type>NULL</type></link>. Caller must unref this object using <link linkend="g-object-unref"><function>g_object_unref()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gdu-pool-get-adapters" role="function">
<title>gdu_pool_get_adapters ()</title>
<indexterm zone="gdu-pool-get-adapters"><primary sortas="gdu_pool_get_adapters">gdu_pool_get_adapters</primary></indexterm><programlisting><link linkend="GList">GList</link> *             gdu_pool_get_adapters               (<link linkend="GduPool">GduPool</link> *pool);</programlisting>
<para>
Get a list of all adapters.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GduPool"><type>GduPool</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A <link linkend="GList"><type>GList</type></link> of <link linkend="GduAdapter"><type>GduAdapter</type></link> objects. Caller must free this
(unref all objects, then use <link linkend="g-list-free"><function>g_list_free()</function></link>).
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gdu-pool-get-expander-by-object-path" role="function">
<title>gdu_pool_get_expander_by_object_path ()</title>
<indexterm zone="gdu-pool-get-expander-by-object-path"><primary sortas="gdu_pool_get_expander_by_object_path">gdu_pool_get_expander_by_object_path</primary></indexterm><programlisting><link linkend="GduExpander">GduExpander</link> *       gdu_pool_get_expander_by_object_path
                                                        (<link linkend="GduPool">GduPool</link> *pool,
                                                         const <link linkend="char">char</link> *object_path);</programlisting>
<para>
Looks up <link linkend="GduExpander"><type>GduExpander</type></link> object for <parameter>object_path</parameter>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara> the pool
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>object_path</parameter>&#160;:</term>
<listitem><simpara> the D-Bus object path
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A <link linkend="GduExpander"><type>GduExpander</type></link> object for <parameter>object_path</parameter>, otherwise
<link linkend="NULL--CAPS"><type>NULL</type></link>. Caller must unref this object using <link linkend="g-object-unref"><function>g_object_unref()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gdu-pool-get-expanders" role="function">
<title>gdu_pool_get_expanders ()</title>
<indexterm zone="gdu-pool-get-expanders"><primary sortas="gdu_pool_get_expanders">gdu_pool_get_expanders</primary></indexterm><programlisting><link linkend="GList">GList</link> *             gdu_pool_get_expanders              (<link linkend="GduPool">GduPool</link> *pool);</programlisting>
<para>
Get a list of all expanders.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GduPool"><type>GduPool</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A <link linkend="GList"><type>GList</type></link> of <link linkend="GduExpander"><type>GduExpander</type></link> objects. Caller must free this
(unref all objects, then use <link linkend="g-list-free"><function>g_list_free()</function></link>).
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gdu-pool-get-port-by-object-path" role="function">
<title>gdu_pool_get_port_by_object_path ()</title>
<indexterm zone="gdu-pool-get-port-by-object-path"><primary sortas="gdu_pool_get_port_by_object_path">gdu_pool_get_port_by_object_path</primary></indexterm><programlisting><link linkend="GduPort">GduPort</link> *           gdu_pool_get_port_by_object_path    (<link linkend="GduPool">GduPool</link> *pool,
                                                         const <link linkend="char">char</link> *object_path);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>object_path</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gdu-pool-get-ports" role="function">
<title>gdu_pool_get_ports ()</title>
<indexterm zone="gdu-pool-get-ports"><primary sortas="gdu_pool_get_ports">gdu_pool_get_ports</primary></indexterm><programlisting><link linkend="GList">GList</link> *             gdu_pool_get_ports                  (<link linkend="GduPool">GduPool</link> *pool);</programlisting>
<para>
Get a list of all ports.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GduPool"><type>GduPool</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A <link linkend="GList"><type>GList</type></link> of <link linkend="GduPort"><type>GduPort</type></link> objects. Caller must free this
(unref all objects, then use <link linkend="g-list-free"><function>g_list_free()</function></link>).
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gdu-pool-get-hub-by-object-path" role="function">
<title>gdu_pool_get_hub_by_object_path ()</title>
<indexterm zone="gdu-pool-get-hub-by-object-path"><primary sortas="gdu_pool_get_hub_by_object_path">gdu_pool_get_hub_by_object_path</primary></indexterm><programlisting><link linkend="GduPresentable">GduPresentable</link> *    gdu_pool_get_hub_by_object_path     (<link linkend="GduPool">GduPool</link> *pool,
                                                         const <link linkend="gchar">gchar</link> *object_path);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>object_path</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gdu-pool-op-linux-md-start" role="function">
<title>gdu_pool_op_linux_md_start ()</title>
<indexterm zone="gdu-pool-op-linux-md-start"><primary sortas="gdu_pool_op_linux_md_start">gdu_pool_op_linux_md_start</primary></indexterm><programlisting><link linkend="void">void</link>                gdu_pool_op_linux_md_start          (<link linkend="GduPool">GduPool</link> *pool,
                                                         <link linkend="GPtrArray">GPtrArray</link> *component_objpaths,
                                                         <link linkend="GduPoolLinuxMdStartCompletedFunc">GduPoolLinuxMdStartCompletedFunc</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
Starts a Linux md Software Array.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GduPool"><type>GduPool</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>component_objpaths</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GPtrArray"><type>GPtrArray</type></link> of object paths.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara> Callback function.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> User data to pass to <parameter>callback</parameter>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gdu-pool-op-linux-md-create" role="function">
<title>gdu_pool_op_linux_md_create ()</title>
<indexterm zone="gdu-pool-op-linux-md-create"><primary sortas="gdu_pool_op_linux_md_create">gdu_pool_op_linux_md_create</primary></indexterm><programlisting><link linkend="void">void</link>                gdu_pool_op_linux_md_create         (<link linkend="GduPool">GduPool</link> *pool,
                                                         <link linkend="GPtrArray">GPtrArray</link> *component_objpaths,
                                                         const <link linkend="gchar">gchar</link> *level,
                                                         <link linkend="guint64">guint64</link> stripe_size,
                                                         const <link linkend="gchar">gchar</link> *name,
                                                         <link linkend="GduPoolLinuxMdCreateCompletedFunc">GduPoolLinuxMdCreateCompletedFunc</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
Creates a Linux md Software Array.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GduPool"><type>GduPool</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>component_objpaths</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GPtrArray"><type>GPtrArray</type></link> of object paths.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>level</parameter>&#160;:</term>
<listitem><simpara> RAID level.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>stripe_size</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara> Name of array.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara> Callback function.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara> User data to pass to <parameter>callback</parameter>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gdu-pool-op-linux-lvm2-vg-start" role="function">
<title>gdu_pool_op_linux_lvm2_vg_start ()</title>
<indexterm zone="gdu-pool-op-linux-lvm2-vg-start"><primary sortas="gdu_pool_op_linux_lvm2_vg_start">gdu_pool_op_linux_lvm2_vg_start</primary></indexterm><programlisting><link linkend="void">void</link>                gdu_pool_op_linux_lvm2_vg_start     (<link linkend="GduPool">GduPool</link> *pool,
                                                         const <link linkend="gchar">gchar</link> *uuid,
                                                         <link linkend="GduPoolLinuxLvm2VGStartCompletedFunc">GduPoolLinuxLvm2VGStartCompletedFunc</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uuid</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gdu-pool-op-linux-lvm2-vg-stop" role="function">
<title>gdu_pool_op_linux_lvm2_vg_stop ()</title>
<indexterm zone="gdu-pool-op-linux-lvm2-vg-stop"><primary sortas="gdu_pool_op_linux_lvm2_vg_stop">gdu_pool_op_linux_lvm2_vg_stop</primary></indexterm><programlisting><link linkend="void">void</link>                gdu_pool_op_linux_lvm2_vg_stop      (<link linkend="GduPool">GduPool</link> *pool,
                                                         const <link linkend="gchar">gchar</link> *uuid,
                                                         <link linkend="GduPoolLinuxLvm2VGStopCompletedFunc">GduPoolLinuxLvm2VGStopCompletedFunc</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uuid</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gdu-pool-op-linux-lvm2-lv-start" role="function">
<title>gdu_pool_op_linux_lvm2_lv_start ()</title>
<indexterm zone="gdu-pool-op-linux-lvm2-lv-start"><primary sortas="gdu_pool_op_linux_lvm2_lv_start">gdu_pool_op_linux_lvm2_lv_start</primary></indexterm><programlisting><link linkend="void">void</link>                gdu_pool_op_linux_lvm2_lv_start     (<link linkend="GduPool">GduPool</link> *pool,
                                                         const <link linkend="gchar">gchar</link> *group_uuid,
                                                         const <link linkend="gchar">gchar</link> *uuid,
                                                         <link linkend="GduPoolLinuxLvm2VGStartCompletedFunc">GduPoolLinuxLvm2VGStartCompletedFunc</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>group_uuid</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uuid</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gdu-pool-op-linux-lvm2-vg-set-name" role="function">
<title>gdu_pool_op_linux_lvm2_vg_set_name ()</title>
<indexterm zone="gdu-pool-op-linux-lvm2-vg-set-name"><primary sortas="gdu_pool_op_linux_lvm2_vg_set_name">gdu_pool_op_linux_lvm2_vg_set_name</primary></indexterm><programlisting><link linkend="void">void</link>                gdu_pool_op_linux_lvm2_vg_set_name  (<link linkend="GduPool">GduPool</link> *pool,
                                                         const <link linkend="gchar">gchar</link> *uuid,
                                                         const <link linkend="gchar">gchar</link> *new_name,
                                                         <link linkend="GduPoolLinuxLvm2VGSetNameCompletedFunc">GduPoolLinuxLvm2VGSetNameCompletedFunc</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uuid</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>new_name</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gdu-pool-op-linux-lvm2-lv-set-name" role="function">
<title>gdu_pool_op_linux_lvm2_lv_set_name ()</title>
<indexterm zone="gdu-pool-op-linux-lvm2-lv-set-name"><primary sortas="gdu_pool_op_linux_lvm2_lv_set_name">gdu_pool_op_linux_lvm2_lv_set_name</primary></indexterm><programlisting><link linkend="void">void</link>                gdu_pool_op_linux_lvm2_lv_set_name  (<link linkend="GduPool">GduPool</link> *pool,
                                                         const <link linkend="gchar">gchar</link> *group_uuid,
                                                         const <link linkend="gchar">gchar</link> *uuid,
                                                         const <link linkend="gchar">gchar</link> *new_name,
                                                         <link linkend="GduPoolLinuxLvm2LVSetNameCompletedFunc">GduPoolLinuxLvm2LVSetNameCompletedFunc</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>group_uuid</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uuid</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>new_name</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gdu-pool-op-linux-lvm2-lv-remove" role="function">
<title>gdu_pool_op_linux_lvm2_lv_remove ()</title>
<indexterm zone="gdu-pool-op-linux-lvm2-lv-remove"><primary sortas="gdu_pool_op_linux_lvm2_lv_remove">gdu_pool_op_linux_lvm2_lv_remove</primary></indexterm><programlisting><link linkend="void">void</link>                gdu_pool_op_linux_lvm2_lv_remove    (<link linkend="GduPool">GduPool</link> *pool,
                                                         const <link linkend="gchar">gchar</link> *group_uuid,
                                                         const <link linkend="gchar">gchar</link> *uuid,
                                                         <link linkend="GduPoolLinuxLvm2LVRemoveCompletedFunc">GduPoolLinuxLvm2LVRemoveCompletedFunc</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>group_uuid</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uuid</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gdu-pool-op-linux-lvm2-lv-create" role="function">
<title>gdu_pool_op_linux_lvm2_lv_create ()</title>
<indexterm zone="gdu-pool-op-linux-lvm2-lv-create"><primary sortas="gdu_pool_op_linux_lvm2_lv_create">gdu_pool_op_linux_lvm2_lv_create</primary></indexterm><programlisting><link linkend="void">void</link>                gdu_pool_op_linux_lvm2_lv_create    (<link linkend="GduPool">GduPool</link> *pool,
                                                         const <link linkend="gchar">gchar</link> *group_uuid,
                                                         const <link linkend="gchar">gchar</link> *name,
                                                         <link linkend="guint64">guint64</link> size,
                                                         <link linkend="guint">guint</link> num_stripes,
                                                         <link linkend="guint64">guint64</link> stripe_size,
                                                         <link linkend="guint">guint</link> num_mirrors,
                                                         const <link linkend="char">char</link> *fstype,
                                                         const <link linkend="char">char</link> *fslabel,
                                                         const <link linkend="char">char</link> *encrypt_passphrase,
                                                         <link linkend="gboolean">gboolean</link> fs_take_ownership,
                                                         <link linkend="GduPoolLinuxLvm2LVCreateCompletedFunc">GduPoolLinuxLvm2LVCreateCompletedFunc</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>group_uuid</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>size</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>num_stripes</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>stripe_size</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>num_mirrors</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fstype</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fslabel</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encrypt_passphrase</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fs_take_ownership</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gdu-pool-op-linux-lvm2-vg-add-pv" role="function">
<title>gdu_pool_op_linux_lvm2_vg_add_pv ()</title>
<indexterm zone="gdu-pool-op-linux-lvm2-vg-add-pv"><primary sortas="gdu_pool_op_linux_lvm2_vg_add_pv">gdu_pool_op_linux_lvm2_vg_add_pv</primary></indexterm><programlisting><link linkend="void">void</link>                gdu_pool_op_linux_lvm2_vg_add_pv    (<link linkend="GduPool">GduPool</link> *pool,
                                                         const <link linkend="gchar">gchar</link> *uuid,
                                                         const <link linkend="gchar">gchar</link> *physical_volume_object_path,
                                                         <link linkend="GduPoolLinuxLvm2VGAddPVCompletedFunc">GduPoolLinuxLvm2VGAddPVCompletedFunc</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uuid</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>physical_volume_object_path</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gdu-pool-op-linux-lvm2-vg-remove-pv" role="function">
<title>gdu_pool_op_linux_lvm2_vg_remove_pv ()</title>
<indexterm zone="gdu-pool-op-linux-lvm2-vg-remove-pv"><primary sortas="gdu_pool_op_linux_lvm2_vg_remove_pv">gdu_pool_op_linux_lvm2_vg_remove_pv</primary></indexterm><programlisting><link linkend="void">void</link>                gdu_pool_op_linux_lvm2_vg_remove_pv (<link linkend="GduPool">GduPool</link> *pool,
                                                         const <link linkend="gchar">gchar</link> *vg_uuid,
                                                         const <link linkend="gchar">gchar</link> *pv_uuid,
                                                         <link linkend="GduPoolLinuxLvm2VGRemovePVCompletedFunc">GduPoolLinuxLvm2VGRemovePVCompletedFunc</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>vg_uuid</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pv_uuid</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>

<refsect1 id="GduPool.signal-details" role="signals">
<title role="signals.title">Signal Details</title>
<refsect2 id="GduPool-adapter-added" role="signal"><title>The <literal>&quot;adapter-added&quot;</literal> signal</title>
<indexterm zone="GduPool-adapter-added"><primary sortas="GduPool::adapter-added">GduPool::adapter-added</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GduPool">GduPool</link>    *pool,
                                                        <link linkend="GduAdapter">GduAdapter</link> *adapter,
                                                        <link linkend="gpointer">gpointer</link>    user_data)      : Run Last</programlisting>
<para>
Emitted when <parameter>adapter</parameter> is added to <parameter>pool</parameter>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara> The <link linkend="GduPool"><type>GduPool</type></link> emitting the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>adapter</parameter>&#160;:</term>
<listitem><simpara> The <link linkend="GduAdapter"><type>GduAdapter</type></link> that was added.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="GduPool-adapter-changed" role="signal"><title>The <literal>&quot;adapter-changed&quot;</literal> signal</title>
<indexterm zone="GduPool-adapter-changed"><primary sortas="GduPool::adapter-changed">GduPool::adapter-changed</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GduPool">GduPool</link>    *pool,
                                                        <link linkend="GduAdapter">GduAdapter</link> *adapter,
                                                        <link linkend="gpointer">gpointer</link>    user_data)      : Run Last</programlisting>
<para>
Emitted when <parameter>adapter</parameter> is changed.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara> The <link linkend="GduPool"><type>GduPool</type></link> emitting the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>adapter</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GduAdapter"><type>GduAdapter</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="GduPool-adapter-removed" role="signal"><title>The <literal>&quot;adapter-removed&quot;</literal> signal</title>
<indexterm zone="GduPool-adapter-removed"><primary sortas="GduPool::adapter-removed">GduPool::adapter-removed</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GduPool">GduPool</link>    *pool,
                                                        <link linkend="GduAdapter">GduAdapter</link> *adapter,
                                                        <link linkend="gpointer">gpointer</link>    user_data)      : Run Last</programlisting>
<para>
Emitted when <parameter>adapter</parameter> is removed from <parameter>pool</parameter>. Recipients
should release references to <parameter>adapter</parameter>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara> The <link linkend="GduPool"><type>GduPool</type></link> emitting the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>adapter</parameter>&#160;:</term>
<listitem><simpara> The <link linkend="GduAdapter"><type>GduAdapter</type></link> that was removed.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="GduPool-device-added" role="signal"><title>The <literal>&quot;device-added&quot;</literal> signal</title>
<indexterm zone="GduPool-device-added"><primary sortas="GduPool::device-added">GduPool::device-added</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GduPool">GduPool</link>   *pool,
                                                        <link linkend="GduDevice">GduDevice</link> *device,
                                                        <link linkend="gpointer">gpointer</link>   user_data)      : Run Last</programlisting>
<para>
Emitted when <parameter>device</parameter> is added to <parameter>pool</parameter>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara> The <link linkend="GduPool"><type>GduPool</type></link> emitting the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>device</parameter>&#160;:</term>
<listitem><simpara> The <link linkend="GduDevice"><type>GduDevice</type></link> that was added.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="GduPool-device-changed" role="signal"><title>The <literal>&quot;device-changed&quot;</literal> signal</title>
<indexterm zone="GduPool-device-changed"><primary sortas="GduPool::device-changed">GduPool::device-changed</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GduPool">GduPool</link>   *pool,
                                                        <link linkend="GduDevice">GduDevice</link> *device,
                                                        <link linkend="gpointer">gpointer</link>   user_data)      : Run Last</programlisting>
<para>
Emitted when <parameter>device</parameter> is changed.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara> The <link linkend="GduPool"><type>GduPool</type></link> emitting the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>device</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GduDevice"><type>GduDevice</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="GduPool-device-job-changed" role="signal"><title>The <literal>&quot;device-job-changed&quot;</literal> signal</title>
<indexterm zone="GduPool-device-job-changed"><primary sortas="GduPool::device-job-changed">GduPool::device-job-changed</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GduPool">GduPool</link>   *pool,
                                                        <link linkend="GduDevice">GduDevice</link> *device,
                                                        <link linkend="gpointer">gpointer</link>   user_data)      : Run Last</programlisting>
<para>
Emitted when job status on <parameter>device</parameter> changes.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara> The <link linkend="GduPool"><type>GduPool</type></link> emitting the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>device</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GduDevice"><type>GduDevice</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="GduPool-device-removed" role="signal"><title>The <literal>&quot;device-removed&quot;</literal> signal</title>
<indexterm zone="GduPool-device-removed"><primary sortas="GduPool::device-removed">GduPool::device-removed</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GduPool">GduPool</link>   *pool,
                                                        <link linkend="GduDevice">GduDevice</link> *device,
                                                        <link linkend="gpointer">gpointer</link>   user_data)      : Run Last</programlisting>
<para>
Emitted when <parameter>device</parameter> is removed from <parameter>pool</parameter>. Recipients
should release references to <parameter>device</parameter>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara> The <link linkend="GduPool"><type>GduPool</type></link> emitting the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>device</parameter>&#160;:</term>
<listitem><simpara> The <link linkend="GduDevice"><type>GduDevice</type></link> that was removed.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="GduPool-disconnected" role="signal"><title>The <literal>&quot;disconnected&quot;</literal> signal</title>
<indexterm zone="GduPool-disconnected"><primary sortas="GduPool::disconnected">GduPool::disconnected</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GduPool">GduPool</link> *pool,
                                                        <link linkend="gpointer">gpointer</link> user_data)      : Run Last</programlisting>
<para>
Emitted when the underlying connection has been disconnected.
</para>
<para>
If you hold a reference to <parameter>pool</parameter>, now is a good time to give it up.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara> The <link linkend="GduPool"><type>GduPool</type></link> emitting the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="GduPool-expander-added" role="signal"><title>The <literal>&quot;expander-added&quot;</literal> signal</title>
<indexterm zone="GduPool-expander-added"><primary sortas="GduPool::expander-added">GduPool::expander-added</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GduPool">GduPool</link>     *pool,
                                                        <link linkend="GduExpander">GduExpander</link> *expander,
                                                        <link linkend="gpointer">gpointer</link>     user_data)      : Run Last</programlisting>
<para>
Emitted when <parameter>expander</parameter> is added to <parameter>pool</parameter>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara> The <link linkend="GduPool"><type>GduPool</type></link> emitting the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>expander</parameter>&#160;:</term>
<listitem><simpara> The <link linkend="GduExpander"><type>GduExpander</type></link> that was added.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="GduPool-expander-changed" role="signal"><title>The <literal>&quot;expander-changed&quot;</literal> signal</title>
<indexterm zone="GduPool-expander-changed"><primary sortas="GduPool::expander-changed">GduPool::expander-changed</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GduPool">GduPool</link>     *pool,
                                                        <link linkend="GduExpander">GduExpander</link> *expander,
                                                        <link linkend="gpointer">gpointer</link>     user_data)      : Run Last</programlisting>
<para>
Emitted when <parameter>expander</parameter> is changed.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara> The <link linkend="GduPool"><type>GduPool</type></link> emitting the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>expander</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GduExpander"><type>GduExpander</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="GduPool-expander-removed" role="signal"><title>The <literal>&quot;expander-removed&quot;</literal> signal</title>
<indexterm zone="GduPool-expander-removed"><primary sortas="GduPool::expander-removed">GduPool::expander-removed</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GduPool">GduPool</link>     *pool,
                                                        <link linkend="GduExpander">GduExpander</link> *expander,
                                                        <link linkend="gpointer">gpointer</link>     user_data)      : Run Last</programlisting>
<para>
Emitted when <parameter>expander</parameter> is removed from <parameter>pool</parameter>. Recipients
should release references to <parameter>expander</parameter>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara> The <link linkend="GduPool"><type>GduPool</type></link> emitting the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>expander</parameter>&#160;:</term>
<listitem><simpara> The <link linkend="GduExpander"><type>GduExpander</type></link> that was removed.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="GduPool-port-added" role="signal"><title>The <literal>&quot;port-added&quot;</literal> signal</title>
<indexterm zone="GduPool-port-added"><primary sortas="GduPool::port-added">GduPool::port-added</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GduPool">GduPool</link> *pool,
                                                        <link linkend="GduPort">GduPort</link> *port,
                                                        <link linkend="gpointer">gpointer</link> user_data)      : Run Last</programlisting>
<para>
Emitted when <parameter>port</parameter> is added to <parameter>pool</parameter>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara> The <link linkend="GduPool"><type>GduPool</type></link> emitting the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>port</parameter>&#160;:</term>
<listitem><simpara> The <link linkend="GduPort"><type>GduPort</type></link> that was added.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="GduPool-port-changed" role="signal"><title>The <literal>&quot;port-changed&quot;</literal> signal</title>
<indexterm zone="GduPool-port-changed"><primary sortas="GduPool::port-changed">GduPool::port-changed</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GduPool">GduPool</link> *pool,
                                                        <link linkend="GduPort">GduPort</link> *port,
                                                        <link linkend="gpointer">gpointer</link> user_data)      : Run Last</programlisting>
<para>
Emitted when <parameter>port</parameter> is changed.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara> The <link linkend="GduPool"><type>GduPool</type></link> emitting the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>port</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GduPort"><type>GduPort</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="GduPool-port-removed" role="signal"><title>The <literal>&quot;port-removed&quot;</literal> signal</title>
<indexterm zone="GduPool-port-removed"><primary sortas="GduPool::port-removed">GduPool::port-removed</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GduPool">GduPool</link> *pool,
                                                        <link linkend="GduPort">GduPort</link> *port,
                                                        <link linkend="gpointer">gpointer</link> user_data)      : Run Last</programlisting>
<para>
Emitted when <parameter>port</parameter> is removed from <parameter>pool</parameter>. Recipients
should release references to <parameter>port</parameter>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara> The <link linkend="GduPool"><type>GduPool</type></link> emitting the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>port</parameter>&#160;:</term>
<listitem><simpara> The <link linkend="GduPort"><type>GduPort</type></link> that was removed.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="GduPool-presentable-added" role="signal"><title>The <literal>&quot;presentable-added&quot;</literal> signal</title>
<indexterm zone="GduPool-presentable-added"><primary sortas="GduPool::presentable-added">GduPool::presentable-added</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GduPool">GduPool</link>        *pool,
                                                        <link linkend="GduPresentable">GduPresentable</link> *presentable,
                                                        <link linkend="gpointer">gpointer</link>        user_data)        : Run Last</programlisting>
<para>
Emitted when <parameter>presentable</parameter> is added to <parameter>pool</parameter>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara> The <link linkend="GduPool"><type>GduPool</type></link> emitting the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>presentable</parameter>&#160;:</term>
<listitem><simpara> The <link linkend="GduPresentable"><type>GduPresentable</type></link> that was added.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="GduPool-presentable-changed" role="signal"><title>The <literal>&quot;presentable-changed&quot;</literal> signal</title>
<indexterm zone="GduPool-presentable-changed"><primary sortas="GduPool::presentable-changed">GduPool::presentable-changed</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GduPool">GduPool</link>        *pool,
                                                        <link linkend="GduPresentable">GduPresentable</link> *presentable,
                                                        <link linkend="gpointer">gpointer</link>        user_data)        : Run Last</programlisting>
<para>
Emitted when <parameter>presentable</parameter> changes.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara> The <link linkend="GduPool"><type>GduPool</type></link> emitting the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>presentable</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GduPresentable"><type>GduPresentable</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="GduPool-presentable-job-changed" role="signal"><title>The <literal>&quot;presentable-job-changed&quot;</literal> signal</title>
<indexterm zone="GduPool-presentable-job-changed"><primary sortas="GduPool::presentable-job-changed">GduPool::presentable-job-changed</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GduPool">GduPool</link>        *pool,
                                                        <link linkend="GduPresentable">GduPresentable</link> *presentable,
                                                        <link linkend="gpointer">gpointer</link>        user_data)        : Run Last</programlisting>
<para>
Emitted when job status on <parameter>presentable</parameter> changes.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara> The <link linkend="GduPool"><type>GduPool</type></link> emitting the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>presentable</parameter>&#160;:</term>
<listitem><simpara> A <link linkend="GduPresentable"><type>GduPresentable</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2 id="GduPool-presentable-removed" role="signal"><title>The <literal>&quot;presentable-removed&quot;</literal> signal</title>
<indexterm zone="GduPool-presentable-removed"><primary sortas="GduPool::presentable-removed">GduPool::presentable-removed</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GduPool">GduPool</link>        *pool,
                                                        <link linkend="GduPresentable">GduPresentable</link> *presentable,
                                                        <link linkend="gpointer">gpointer</link>        user_data)        : Run Last</programlisting>
<para>
Emitted when <parameter>presentable</parameter> is removed from <parameter>pool</parameter>. Recipients
should release references to <parameter>presentable</parameter>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pool</parameter>&#160;:</term>
<listitem><simpara> The <link linkend="GduPool"><type>GduPool</type></link> emitting the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>presentable</parameter>&#160;:</term>
<listitem><simpara> The <link linkend="GduPresentable"><type>GduPresentable</type></link> that was removed.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>



</refentry>
