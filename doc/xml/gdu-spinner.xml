<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
<!ENTITY version SYSTEM "version.xml">
]>
<refentry id="gnome-disk-utility-gdu-spinner">
<refmeta>
<refentrytitle role="top_of_page" id="gnome-disk-utility-gdu-spinner.top_of_page">gdu-spinner</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GNOME-DISK-UTILITY Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>gdu-spinner</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="gnome-disk-utility-gdu-spinner.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
typedef             <link linkend="GduSpinnerClass">GduSpinnerClass</link>;
typedef             <link linkend="GduSpinnerPrivate">GduSpinnerPrivate</link>;
<link linkend="GtkWidget">GtkWidget</link> *         <link linkend="gdu-spinner-new">gdu_spinner_new</link>                     (void);
<link linkend="void">void</link>                <link linkend="gdu-spinner-start">gdu_spinner_start</link>                   (<link linkend="GduSpinner">GduSpinner</link> *spinner);
<link linkend="void">void</link>                <link linkend="gdu-spinner-stop">gdu_spinner_stop</link>                    (<link linkend="GduSpinner">GduSpinner</link> *spinner);
</synopsis>
</refsynopsisdiv>









<refsect1 id="gnome-disk-utility-gdu-spinner.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>

<refsect1 id="gnome-disk-utility-gdu-spinner.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="GduSpinnerClass" role="typedef">
<title>GduSpinnerClass</title>
<indexterm zone="GduSpinnerClass"><primary sortas="GduSpinnerClass">GduSpinnerClass</primary></indexterm><programlisting>typedef struct GduSpinnerClass    GduSpinnerClass;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="GduSpinnerPrivate" role="typedef">
<title>GduSpinnerPrivate</title>
<indexterm zone="GduSpinnerPrivate"><primary sortas="GduSpinnerPrivate">GduSpinnerPrivate</primary></indexterm><programlisting>typedef struct GduSpinnerPrivate  GduSpinnerPrivate;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="gdu-spinner-new" role="function">
<title>gdu_spinner_new ()</title>
<indexterm zone="gdu-spinner-new"><primary sortas="gdu_spinner_new">gdu_spinner_new</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link> *         gdu_spinner_new                     (void);</programlisting>
<para>
Returns a default spinner. Not yet started.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a new <link linkend="GduSpinner"><type>GduSpinner</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gdu-spinner-start" role="function">
<title>gdu_spinner_start ()</title>
<indexterm zone="gdu-spinner-start"><primary sortas="gdu_spinner_start">gdu_spinner_start</primary></indexterm><programlisting><link linkend="void">void</link>                gdu_spinner_start                   (<link linkend="GduSpinner">GduSpinner</link> *spinner);</programlisting>
<para>
Starts the animation</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>spinner</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gdu-spinner-stop" role="function">
<title>gdu_spinner_stop ()</title>
<indexterm zone="gdu-spinner-stop"><primary sortas="gdu_spinner_stop">gdu_spinner_stop</primary></indexterm><programlisting><link linkend="void">void</link>                gdu_spinner_stop                    (<link linkend="GduSpinner">GduSpinner</link> *spinner);</programlisting>
<para>
Stops the animation</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>spinner</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
